"""
Django settings for LearningApp project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import dotenv_values

# Path to credentials in .env file
config = dotenv_values(Path(__file__).parent / ".env")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# assume we're in production context, if config["DB_USER"] is defined
is_prod = config.get("DB_USER")

# we only inject some testing-specific info into the config dirct
if is_prod:
    config["DEBUG"] = False
else:
    config["DEBUG"] = True
    config["SECRET_KEY"] = 'django-insecure-()y&8*47k#8o%hiu1hysht2rxt_ft=g$tln1o^&=t#3iw1hsk7'

#####################################################################
#                                                                   #
#  BELOW, ALL OPTIONS ARE SET AUTOMATICALLY BASED ON THE .env FILE  #
#                                                                   #
#####################################################################

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config["DEBUG"]

if is_prod:
    ALLOWED_HOSTS = ["localhost", config["DOMAIN"]]
else:
    ALLOWED_HOSTS = ["localhost"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "quiz.apps.QuizConfig",
    "users.apps.UsersConfig",
    "crispy_forms",
    "crispy_bootstrap5",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_admin_listfilter_dropdown",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LearningApp.urls'

_context_processors = [] if is_prod else ["django.template.context_processors.debug"]

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "LearningApp/templates", BASE_DIR / "quiz/templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": _context_processors + [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "LearningApp.context_processors.sorted_subjects",  # sort subjects alphabetically
                "LearningApp.context_processors.available_subjects",  # show available subjects to user
            ],
        },
    },
]

WSGI_APPLICATION = 'LearningApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

_engine = "postgresql" if is_prod else "sqlite3"
DATABASES = {
    'default': {
        'ENGINE': f'django.db.backends.{_engine}',
        "NAME": config.get("DB_NAME", BASE_DIR / 'db.sqlite3'),
        "USER": config.get("DB_USER"),
        "PASSWORD": config.get("DB_PASS"),
        "HOST": config.get("DB_HOST"),
        "PORT": config.get("DB_PORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'de-de'  #'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = "/var/www/learningapp.winderling.net/static"
STATIC_URL = 'static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Staticfiles directory 
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

LOGIN_REDIRECT_URL = "user-page"
LOGOUT_REDIRECT_URL = "home"
LOGIN_URL = "login"

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = config["EMAIL_HOST"]
EMAIL_PORT = config["EMAIL_PORT"]
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config["EMAIL_HOST_USER"]
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = config["EMAIL_HOST_PASSWORD"]

INTERNAL_IPS = [
    "127.0.0.1",
]

if is_prod:
    USE_X_FORWARDED_HOST = True
    USE_X_FORWARDED_PORT = True
    SESSION_COOKIE_SECURE = True
    CSRF_TRUSTED_ORIGINS = [f"https://{config['DOMAIN']}"]

    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "handlers": {
            "file": {
                "level": "DEBUG",
                "class": "logging.FileHandler",
                "filename": "/var/log/learningapp/django.log",
            },
        },
        "loggers": {
            "django": {
                "handlers": ["file"],
                "level": "INFO",
                "propagate": True,
            },
        },
    }
